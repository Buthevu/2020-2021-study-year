print_string"Probability that a random square is ending by \'0\' is 1 / 10.\n";;
print_string"Probability that a random square is ending by \'1\' is 2 / 10.\n";;
print_string"Probability that a random square is ending by \'2\' is 0 / 10.\n";;
print_string"Probability that a random square is ending by \'3\' is 0 / 10.\n";;
print_string"Probability that a random square is ending by \'4\' is 2 / 10.\n";;
print_string"Probability that a random square is ending by \'5\' is 1 / 10.\n";;
print_string"Probability that a random square is ending by \'6\' is 2 / 10.\n";;
print_string"Probability that a random square is ending by \'7\' is 0 / 10.\n";;
print_string"Probability that a random square is ending by \'8\' is 0 / 10.\n";;
print_string"Probability that a random square is ending by \'9\' is 2 / 10.\n";;

let probability_that_random_number_fro_1_to_n_is_ending_by_1 n =
let rec sup_f i k= if i > n then k else (if ((string_of_int (i)).[(String.length (string_of_int (i))) - 1] = '1') then (sup_f (i+1) (k+1)) else (sup_f (i+1) k)) in
(float_of_int(sup_f 1 0))/.(float_of_int n);;

print_string"\nPlease, give me a number to probability that random number from 1 to n is ending by \'1\':";;
let number_i_got_first = read_int();;

print_string("Probability that random number from 1 to "^(string_of_int (number_i_got_first))^" is ending by \'1\' is ");;

print_float (probability_that_random_number_fro_1_to_n_is_ending_by_1 number_i_got_first);;

let probability_that_2_people_out_of_n_were_born_on_the_same_day n=
let rec sup_f i = if i = n - 1 then (366-i) else ((sup_f (i+1)) * (366 - i)) in
if n > 365 then 1.0 else (1. -. ((float_of_int (sup_f 0))/.(366.0 ** (float_of_int n))));;

print_string"\n\nPlease, give me a number probability that 2 people out of n were born on the same day:";;
let number_i_got = read_int();;

print_string("Probability that 2 people out of "^(string_of_int number_i_got)^" were born on the same day is:");;
print_float (probability_that_2_people_out_of_n_were_born_on_the_same_day number_i_got);;
print_string"\n";;                      

type answer = Yes of string| No;;

let count_words_at_file file word_i_am_looking_for =
let t = Hashtbl.create (2000) in
let f = open_in file in
let rec read_row() =
try 
    (let s = input_line f in
     Yes s)
with
    _-> No in

let canon s = 
let rec sup_f i = if i = String.length s then "" 
                                         else (let c = s.[i] in
                                               if ((('A' <= c)&&(c <= 'Z'))||(('А' <= c)&&(c <= 'Я'))) then ((String.make 1 (char_of_int ((int_of_char (c)) + 32)))^(sup_f (i+1))) 
                                                                                                       else (if (c = 'Ё') then ("ё"^(sup_f (i+1)))
                                                                                                                          else ((String.make 1 c)^(sup_f (i+1)))
                                                                                                            )
                                              ) in
sup_f 0 in


let rec process s1= let can = canon s1 in
                        if (Hashtbl.mem t can) then (let n = Hashtbl.find t can in
                                                     Hashtbl.replace t can (n+1))
                                               else (Hashtbl.add t can 1) in


let rec sup_f s i s1= 
    if i = String.length s then (match (read_row()) with
                                     Yes str -> if s1 = "" then (sup_f str 0 "") else (process s1; sup_f str 0 "")
                                    |No -> if s1 = "" then () 
                                                      else (process s1)
                                )
                           else ((if ((s.[i]) < 'A')||(s.[i] = '«')||(s.[i] = '»') then (if s1 = "" then (sup_f s (i+1) "") 
                                                                                                    else (process s1;sup_f s (i+1) ""))
                                                                                   else (sup_f s (i+1) (s1^(String.make 1 (s.[i]))))
                                                                                     )
                                ) in              
 

sup_f "" 0 "";
let num_i_am_looking_for = (if (Hashtbl.mem t word_i_am_looking_for) then (Hashtbl.find t word_i_am_looking_for) else 0) in

(num_i_am_looking_for,Hashtbl.fold (fun s n1 n2 -> n1+ n2) t 0);;


let list_of_files = List.filter (fun x -> (String.sub x ((String.length x) - 4) 4) = ".txt") (Array.to_list (Sys.readdir "C:/Users/User/Downloads/reg/study_year_2020-2021/first_semester/2020.09.16"));;

print_string"\nPlease, enter the word: \n";;
let the_word = read_line();;
print_string"Please? enter the name of file: \n";;
let the_file = ((read_line())^".txt");; 

let rec super_function l =
match l with
(s,n1,n2)::tl->if s = (the_file) then (let (a,b,c,d) = (super_function tl) in (n1,n2,n1+c,d+n2))
                                      else (let (a,b,c,d) = (super_function tl) in (a,b,c+n1,d+n2))
|[]->(0,0,0,0);;

let (a1,b1,c1,d1) = super_function (List.map (fun x -> let (a,b) = (count_words_at_file x the_word) in (x,a,b)) list_of_files);;

let a = float_of_int(a1);; 
let b = float_of_int(b1);; 
let c = float_of_int(c1);; 
let d = float_of_int(d1);; 

let answ = a/.c;;

print_string("Probability that we are reading "^the_file^" if we saw "^the_word^":\n");;
print_float (answ);;
